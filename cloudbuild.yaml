#
# User-defined substitutions:
#   _CLOUDSDK_COMPUTE_ZONE
#   _CLOUDSDK_CONTAINER_CLUSTER
#

steps:
  # Generate a kubeconfig file for the given GKE cluster.
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        CLUSTER=$$(gcloud config get-value container/cluster)
        PROJECT=$$(gcloud config get-value core/project)
        ZONE=$$(gcloud config get-value compute/zone)

        gcloud container clusters get-credentials "$${CLUSTER}" \
          --project "$${PROJECT}" \
          --zone "$${ZONE}"
    volumes:
      - name: 'kube'
        path: /kube

  # Build the hashcode container image.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/hashcode:${COMMIT_SHA}'
      - '.'

  # Patch the deployment.
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'sh'
    args:
      - '-c'
      - |

        cat <<EOF > patch.yaml
        spec:
          template:
            spec:
              containers:
                - name: hashcode
                  image: gcr.io/${PROJECT_ID}/hashcode:${COMMIT_SHA}
        EOF

        kubectl patch --local -o yaml \
          -f kubernetes/deployment.yaml \
          -p "$(cat patch.yaml)"

        mv deployment.yaml kubernetes/deployment.yaml

        kubectl apply --recursive -f kubernetes

    volumes:
      - name: 'kube'
        path: /kube

images:
  - 'gcr.io/${PROJECT_ID}/hashcode:${COMMIT_SHA}'
